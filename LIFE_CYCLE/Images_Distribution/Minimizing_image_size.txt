

		Сокращение размера образа

				Многи разы docker достигают сотен мегобайт, что влечет за собой накладные расходы
				на загрузку и выгрузку образов.
				Во многих случаях следует попытаться уменьшить размеры образов, но это не так просто.

				Самое тупое: Удалять ненужные файлы.

				Особенности.

						Если файлы создан на одном уровне, а удаляется на другом, то это может
						не сработать:

							Создадим файл размером 50МБ на одном уровне (RUN) и удалим его на другом:

								RUN dd if=/dev/zero of=/bigfile count=1 bs=50MB
								RUN rm /bigfile 

								(Результат: файл не удалится - уровни разные)

						Поэтому слеует удалять файлы на одном уровне с их созданием (так делают
						распаковщики ахивов пакетов, к примеру, MongoDB):

								RUN dd if=/dev/zero of=/bigfile count=1 bs=50MB && rm /bigfile

								(Файл удалится)

								Пример из оффициального установщика MongoDB:

										RUN curl -SL "https://$MONGO_VERSION.tgz" -o mongo.tgz \
										 && curl -SL "https://$MONGO_VERSION.tgz.sig" -o mongo.tgz.sig \
										 && gpg --verify mongo.tgz.sig \
										 && tar -xvf mongo.tgz -C /usr/local --strip-components=1 \
										 && rm mongo.tgz*


				Еще одна возможность уменьения образа заклчается в выполнении операции экспорта
				контейнера, а после применения команды импортирования, получится ораз содержащий 
				только 1 уровень.


						docker create identidock:latest
						docker export $(docker ps -lq) | docker import -
							146880a....
						docker tag 146880a identidock:import
						docker images identidock
						docker history identidock:import

						Минусы:

								Необходимо повторно выполнять все инструкции Dockerfile
								Теряются все метаданные, связанные с исходным образом
								После импорта невозможно использтва ь пространство совместно
								с другими образами, основанными на том же родительском образе.