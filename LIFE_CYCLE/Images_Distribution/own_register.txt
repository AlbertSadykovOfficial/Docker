

		Организация собственного реестра

				Главное назначение - централизованное хранилище для группы разработчиков
				или всей организации.

				Простейшим сособом создания локального реестра является использование
				оффициального образа. Быстрый запуск:

						docker run -d -p 5000:5000 registry:2

				Так мы создали оаотающий реестр, мы можем присваивать образам соответствующие
				теги и выгружать их в этот реестр. 

						docker tag albertsadykovofficial/identidock:0.1 localhost:5000/identidock:0.1
						docker push loaclhost:5000/identidock:0.1


				Если сейчас удлаить логкальную копию, то ее легко можно извлечь из реестра.

						docker rmi localhost:5000/identidock:0.1

						docker pill localhost:5000/identidock:0.1

				Реестр сгененирует Дайджест - уникальное значение на основе содрежимого и метаданных.
				Образы можно извлекать из реестра по этим дайджестам. Главное его преимущество - 
				абсолтная уверенность за то, что извлекаеттся именно тот образ, который нужен,
				в отличие от тегов, которые могут оставаться одинаковыми для разных версий образа. 

						docker pull localhost:5000/identidock@sha256:<digest_hash>

				
				Для локального реестра потребуется возможность загрузки образов удаленным демоном Docker.
				Но при попытке образения извне к локальному реестру, будет сгенерирована ошибка.
				Ошибка возникнет из-за того, что нет сертификата TSL. При локальной отладке Docker закрывает
				на это глаза.

						Проблему можн решить 3 способами:

								1) Перезагрузить каждый демон, которому требуется доступ к нащему реестру
									 с аргументом --insecure-registry <IP>
									 (Не безопасно - все открыто)
								2) Установить на хосте реестра подписанный сертификат от аккредитованного 
									 центра сертификации, чтобы управлять через HTTPS. 
									 (Сертификат стоит денег)
								3) Установаить на хосте самоподписанный сертификат и скопировать его на все 
									 хосты демонов Docker, которым нужен доступ к реестру
									 (Все вручную - неудобно)


			 


