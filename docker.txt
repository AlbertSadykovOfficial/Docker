		
		Docker


		Контейнеры. 

		Почему появились:

				Раньше для того, чтобы разместить свое приложение в сети, нужно было
				обращаться к провайдерам, они за деньги выделяли отдельный компьютер,
				который исполнял приложение (обычно web). Конечно, использовать 1 
				компьтер всего для одного приложения не рационально, особенно, если
				оно не часто используется.

				Чтобы решить такую проблему придумал вирутальные машины, которые 
				позволяли на одном компьютере развернуть несколько независимых друг
				от друга систем, которые делили ресурсы. Но проблема в том, что такое
				решение тоже не совсем уместно, потому что опять для ОДНОГО приложения
				поднимается целая ОПЕРАЦИОННАЯ СИСТЕМА, которая сама по себе потребляет
				не мало ресурсов. Это влечет за собой то, что очень много ресурсов 
				ухожи в никуда. Для решения этой проблемы был разработан Docker.

		Принцип:

				Чтобы устранить недостатки Виртуальных машин были разработаны контейнеры.
				Контейнер - это приложение, которое запускает внутри себя приложение и изолирует
				его от других приложений. Изоляция такая, что внутреннее приложение всерьез
				думает, что оно единственное запущенное. Такое приложение обитает в своем 
				пространстве имен. Так как оно изолирвано и думает, что оно единственное
				запущенное, то с другими приложениями (в том числе и другими котейнерами)
				оно связывается по сети (через протокол HTTP).
				
				Стоит отметить, что с точки зрения Операционной Системы 
				контейнеры выгядят как обычные приложения (как браузер, блокнот, проводник).

				Если контейнеров очень много и они образуют кластер, то управлять ими становится
				проблематчно, для решения данной проблемы применят программы - оркетсраторы (CI/CD),
				на вход которых подается файл с описанием всей архитектуры распределенного приложения
				(адреса и тд), а на выходе получается функционирующий кластер со всеми возможностями.
				Оркетсароторы - слудеющий уровень, он леит поверх обычнх контейнеров.


		Контейнеры нужны для того, чтобы различные приложения одинаково запускались
		на разных компьютерах (при условии, что компьютеры имеют одинаковые базы, т.е
		Linux x64 - Lunux x64). Контейнеры устраняют проблему "работае на моем компе,
		но не работает на другог таком же". Они дают приложениям универсальность,
		в самом названии есть отсылка к этому. Сегодня грузовые контейнеры - являются 
		стандартизированными блоками, которые позволяют перевозить груз на любых 
		платформах ->  с грузовика -> на поезд, с поезда на корабль.

		Контейнеры часто схожи с Виртуальными машинами, но если основаная задача 
		виртуальных машин в эмуляции той или иной ОС, то задача контейнеров, повторимся,
		запуск приложений на разных платформах. Если смотреть вглубь, то большие различия
		и в приницпе работы этих 2х технологий, Каждая VM - порождает отдельную ветку,
		копиуя все библиотеки ОС, отнимает много ресурсов. В свою очередь контйнеры 
		работают за счет ресурсов текущей ОС и часто несколько контейнеров могут иметь
		общие компоненты, что позволяет устранить дублирование инфомрации.

		Установка Docker может отличаться в различных ОС и стандартные методы могут
		иногда не работать. В моем случае так и случилось и на Kali Linux стандартная
		установка не подействовала, но на оффициальном сайте я быстро нашел инструкцию
		по становке, которая зааботала.  


		Dockerfile - нужен для создание образа и автоматизирование воспроиведение процедуры 
								 создания докер контейнера